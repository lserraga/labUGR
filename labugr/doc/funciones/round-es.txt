Redondee al número dado de decimales.

    Parámetros
    ----------
    a: array_like
        Datos de entrada.
    decimales: int, opcional
        Número de decimales para redondear a (predeterminado: 0). Si
        decimales es negativo, especifica el número de posiciones a
        la izquierda del punto decimal.
    out: ndarray, opcional
        Matriz de salida alternativa en la que colocar el resultado. Debe tener
        la misma forma que la salida esperada, pero el tipo de la salida
        los valores serán emitidos si es necesario. Véase `doc.ufuncs` (Sección
        "Argumentos de salida") para más detalles.

    Devoluciones
    -------
    rounded_array: ndarray
        Una matriz del mismo tipo que `a`, que contiene los valores redondeados.
        A menos que se especifique `out`, se crea una nueva matriz. Una referencia a
        se devuelve el resultado.

        Las partes real e imaginaria de los números complejos se redondean
        por separado. El resultado de redondear un flotador es un flotador.

    Ver también
    --------
    ndarray.round: método equivalente

    ceil, arreglo, piso, rint, trunc


    Notas
    -----
    Para valores exactamente a medio camino entre valores decimales redondeados, NumPy
    redondea al valor par más cercano. Así, 1,5 y 2,5 redondean a 2,0,
    -0,5 y 0,5 ronda a 0,0, etc. Los resultados también pueden ser sorprendentes debido
    a la representación inexacta de fracciones decimales en el IEEE
    punto flotante estándar [1] _ y errores introducidos al escalar
    por poderes de diez.

    Referencias
    ----------
    .. [1] "Notas de conferencia sobre el estado del IEEE 754", William Kahan,
           http://www.cs.berkeley.edu/~wkahan/ieee754status/IEEE754.PDF
    .. [2] "¿Cómo Futile son Mindless evaluaciones de
           Roundoff en la computación de punto flotante? ", William Kahan,
           http://www.cs.berkeley.edu/~wkahan/Mindless.pdf

    Ejemplos
    --------
    >>> np.around ([0,37, 1,64])
    array ([0., 2.])
    >>> np.around ([0.37, 1.64], decimales = 1)
    matriz ([0,4, 1,6])
    >>> np.around ([.5, 1.5, 2.5, 3.5, 4.5]) # redondea al valor uniforme más cercano
    matriz ([0., 2., 2., 4., 4.])
    >>> np.around ([1,2,3,11], decimals = 1) # ndarray de ints se devuelve
    matriz ([1, 2, 3, 11])
    >>> np.around ([1,2,3,11], decimales = -1)
    matriz ([0, 0, 0, 10])