Estado-espacio para transferir la función.

    A, B, C, D define un sistema de espacio de estado lineal con entradas `p`,
    `q` salidas, y` n` variables de estado.

    Parámetros
    ----------
    A: array_like
        Estado (o sistema) matriz de forma `` (n, n) ``
    B: array_like
        Matriz de entrada de la forma `` (n, p) ``
    C: array_like
        Matriz de salida de la forma `` (q, n) ``
    D: array_like
        Matriz de alimentación (o feedforward) de la forma `` (q, p) ``
    entrada: int, opcional
        Para sistemas de entradas múltiples, el índice de la entrada a utilizar.

    Devoluciones
    -------
    num: 2-D ndarray
        Numerador (es) de la (s) función (es) de transferencia resultante (s). `num` tiene una fila
        para cada una de las salidas del sistema. Cada fila es una representación de secuencia
        del polinomio numerador.
    den: 1-D ndarray
        Denominador de la (s) función (es) de transferencia resultante (s). `den` es una secuencia
        representación del polinomio denominador.

    Ejemplos
    --------
    Convertir la representación de espacio de estado:

    matemáticas

        \ dot {\ textbf {x}} (t) =
        \ begin {bmatrix} -2 & -1 \\ 1 & 0 \ end {bmatrix} \ textbf {x} (t) +
        \ begin {bmatrix} 1 \\ 0 \ end {bmatrix} \ textbf {u} (t) \\

        \ textbf {y} (t) = \ begin {bmatrix} 1 & 2 \ end {bmatrix} \ textbf {x} (t) +
        \ begin {bmatrix} 1 \ end {bmatrix} \ textbf {u} (t)

    >>> A = [[-2, -1], [1, 0]]
    >>> B = [[1], [0]] # vector de columna de 2 dimensiones
    >>> C = [[1, 2]] vector de filas # 2-dimensional
    >>> D = 1

    a la función de transferencia:

    .. matemáticas :: H (s) = \ frac {s ^ 2 + 3s + 3} {s ^ 2 + 2s + 1}

    >>> de scipy.signal importación ss2tf
    >>> ss2tf (A, B, C, D)
    (array ([[1, 3, 3]]), matriz ([1., 2., 1.]))