Haga una barra de trama.

Haga un gráfico de barra con rectángulos delimitados por:

  `left`,` left` + `width`,` bottom`, `bottom` +` height`
        (bordes izquierdo, derecho, inferior y superior)

Parámetros
----------
left: secuencia de escalares
    las coordenadas x de los lados izquierdos de las barras

altura: secuencia de escalares
    las alturas de las barras

anchura: escalar o array-like, opcional
    la (s) anchura (s) de las barras
    valor predeterminado: 0,8

inferior: escalar o array-like, opcional
    la (s) coordenada (s) y de las barras
    predeterminado: Ninguno

color: escalar o array-like, opcional
    los colores de las caras de la barra

edgecolor: escalar o array-like, opcional
    los colores de los bordes de la barra

linewidth: escalar o array-like, opcional
    anchura del borde (s) de la barra. Si no, utilice predeterminado
    ancho de línea; Si 0, no dibuje los bordes.
    predeterminado: Ninguno

tick_label: string o array-like, opcional
    las etiquetas de las garras de las barras
    predeterminado: Ninguno

xerr: escalar o array-like, opcional
    si no ninguno, se utilizará para generar barras de error en el gráfico de barras
    predeterminado: Ninguno

yerr: escalar o array-like, opcional
    si no ninguno, se utilizará para generar barras de error en el gráfico de barras
    predeterminado: Ninguno

ecolor: escalar o array-like, opcional
    especifica el color de la (s) barra (s) de error
    predeterminado: Ninguno

capsize: escalar, opcional
   determina la longitud en puntos de las tapas de la barra de error
   predeterminado: Ninguno, que tomará el valor de la
   `` errorbar.capsize``: data: `rcParam <matplotlib.rcParams>`.

error_kw: dict, opcional
    diccionario de kwargs que se pasará al método errorbar. * ecolor * y
    * capsize * se puede especificar aquí en lugar de como kwargs independientes.

align: {'center', 'edge'}, opcional
    Si 'borde', alinea barras por sus bordes izquierdos (para barras verticales) y
    por sus bordes inferiores (para barras horizontales). Si 'centro', interpretar
    el argumento `left` como las coordenadas de los centros de las barras.
    Para alinear en las barras de alineación en el borde derecho pasar un negativo
    `width`.

orientación: {'vertical', 'horizontal'}, opcional
    La orientación de las barras.

log: booleano, opcional
    Si es true, establece el eje como escala de log.
    predeterminado: falso

Devoluciones
-------
bares: matplotlib.container.BarContainer
    Contenedor con todas las barras + barras de error

Notas
-----
Los argumentos opcionales `color`,` edgecolor`, `linewidth`,
`xerr` y` yerr` pueden ser escalares o secuencias de
longitud igual al número de barras. Esto le permite usar
barra como la base para gráficos de barras apilados, o parcelas de candelero.
Detalle: `xerr` y` yerr` se pasan directamente a
: meth: `errorbar`, así que también pueden tener forma 2xN para
especificación independiente de errores inferiores y superiores.

Otros kwargs opcionales:

  agg_filter: desconocido
  alpha: float o Ninguno
  animado: [Verdadero | Falso]
  antialiaso o aa: [Verdadero | False] o Ninguno por defecto
  ejes: una: clase: `` instancia matplotlib.axes.Axes`
  capstyle: ['culo' | 'redondo' | 'saliente']
  clip_box: a: class: Instancia `matplotlib.transforms.Bbox`
  clip_on: [Verdadero | Falso]
  clip_path: [(: class: `~ matplotlib.path.Path`,: class:` ~ matplotlib.transforms.Transform`) | : class: `~ matplotlib.patches.Patch` | Ninguna ]
  color: especificaciones de color matplotlib
  contiene: una función llamable
  edgecolor o ec: especificación de color mpl, None, 'none' o 'auto'
  facecolor o fc: especificación de color mpl, o Ninguno por defecto o "ninguno" para ningún color
  figura: a: clase: instancia `matplotlib.figure.Figure`
  fill: [Verdadero | Falso]
  gid: una cadena de id
  escotilla: ['/' | '\\' | Un | '-' | '+' | 'x' | o 'O' | '.' | '*']
  joinstyle: ['miter' | 'redondo' | 'bisel']
  label: cadena o cualquier cosa que se pueda imprimir con la conversión '% s'.
  linestyle o ls: ['sólido' | 'salpicado', 'dashdot', 'punteado' | (offset, on-off-dash-seq) | Unesdoc.unesco.org unesdoc.unesco.org Unesdoc.unesco.org unesdoc.unesco.org Unesdoc.unesco.org unesdoc.unesco.org Unesdoc.unesco.org unesdoc.unesco.org `` 'None'`` | Unesdoc.unesco.org unesdoc.unesco.org Unesdoc.unesco.org unesdoc.unesco.org
  linewidth o lw: float o Ninguno por defecto
  path_effects: desconocido
  selector: [Ninguno | float | boolean | callable]
  rasterizado: [Verdadero | Falso | Ninguna]
  sketch_params: desconocido
  snap: desconocido
  transform:: clase: `` instancia matplotlib.transforms.Transform`
  url: una cadena url
  visible: [Verdadero | Falso]
  zorder: cualquier número

Ver también
--------
barh: Trazar un gráfico de barras horizontales.

Ejemplos
--------

** Ejemplo: ** Un gráfico de barras apiladas.

.. plot :: mpl_examples / pylab_examples / bar_stacked.py

.. Nota::
    Además de los argumentos descritos anteriormente, esta función puede
    ** data ** argumento de palabra clave. Si se presenta un argumento de tipo ** data **,
    los siguientes argumentos se sustituyen por ** data [<arg>] **:

    * Todos los argumentos con el following nombres: 'bottom', 'color', 'ecolor', 'edgecolor', 'height', 'izquierda', 'linewidth', 'tick_label', 'anchura', 'xerr', 'yerr'.